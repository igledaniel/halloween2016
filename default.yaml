# Author @patriciogv - 2015

import:
    - https://tangrams.github.io/blocks/global.yaml
    - https://tangrams.github.io/blocks/filter/height.yaml
    - https://tangrams.github.io/blocks/patterns/stripes.yaml
    - https://tangrams.github.io/blocks/filter/grain.yaml
    - https://tangrams.github.io/blocks/space/constant.yaml

sources:
    mapzen:
        type: TopoJSON
        # prod
        url:  https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-VyYjZGS
        # dev
        #url:  https://tile.dev.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        rasters: [normals]
        max_zoom: 16
    normals: # normals
        type: Raster
        url: https://tile.mapzen.com/mapzen/terrain/v1/normal/{z}/{x}/{y}.png
        max_zoom: 15

cameras:
    cam:
        type: perspective
        # vanishing_point: [0, -500]

lights:
    dir:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .7
        ambient: .5

layers:
    water:
        data: { source: mapzen }
        draw:
            water:
                order: global.order
                color: [0.165, 0.169, 0.212, 1.00]
    earth:
        data: { source: mapzen}
        draw:
            terrain:
                order: function() { return feature.sort_rank; }
                color: [1.0, 1.0, 1.0]
    roads:
        data: { source: mapzen }
        filter: { not: { kind: [rail, ferry] } }
        draw:
            roads:
                order: global.order
                color: [0.988, 0.988, 0.988]
                width: [[7,0.0px], [10, .5px], [15, .75px], [17, 5m]]
        highway:
            filter: { kind: highway }
            draw:
                roads:
                    order: global.order
                    width: [[8,0px], [8,.25px], [11, 1.5px], [14, 2px], [16, 4px], [17, 10m]]
            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    roads:
                        width: [[8,0px], [14, 3px], [16, 5px], [18, 10m]]
                tunnel-link:
                    filter: {is_tunnel: true, $zoom: {min: 13} }
        tunnel:
            filter: {is_tunnel: true }
            draw:
                roads:
                    order: global.order
    buildings:
        data: { source: mapzen }
        draw:
            buildings:
                order: global.order
                color: '#999'
                extrude: true
styles:
    water:
        base: polygons
    earth:
        data: { source: mapzen}
        draw:
            terrain:
                order: function() { return feature.sort_rank; }
                color: [1.0, 1.0, 1.0]
    landuse:
        base: polygons
    roads:
        base: lines
        lighting: false
    buildings:
        base: polygons
        mix: [filter-height]

    terrain:
        base: polygons
        lighting: false
        # mix: [grid]
        raster: normal
        shaders:
            uniforms:
                u_scale: 1 # higher values are more exaggerated
                u_envmap: img/sphere-map1.png
            blocks:
                global: |
                    vec4 terrainEnvmap (in sampler2D _tex, in vec3 _normal) {
                        const vec3 eye = vec3(0.,0.,-1.);
                        vec3 r = reflect(eye, _normal);
                        r.z += 1.0;
                        float m = 2. * length(r);
                        vec2 uv = r.xy / m + .5;
                        return texture2D(_tex, uv);
                    }
                color: |
                    // color = v_color;
                    normal.z /= u_scale; // turn terrain exaggeration up/down
                    normal = normalize(normal);
                    color = terrainEnvmap(u_envmap, normal);

                    // color *= v_color; // apply layer color to envmap
